tuple: 元组，有序列表，一旦初始化本能改变。
      classmates=('Michaek','Bob','Tracy')
	t=(1,) 定义一个元祖
	t = ('a', 'b', ['A', 'B']) 内含可变对象列表

list:列表，有序的集合，可以随时添加和删除其中的元素。
     classmates=['Michael','Bob',Tracy]

dict: 字典，使用key-value存储，具有极快的查找速度
	names={'Michael':95,'Bob':75,'Tracy':85}
    和list比较：
    1,查找和插入的速度极快，不会随着key的增加而变慢；
    2,需要占用大量的内存，内存浪费多。
    list：
    1,查找和插入的时间随着元素的增加而增加
    2,占用空间小，浪费内存少
     所以dict是典型的空间换取时间的
set： 一组key的集合，在set中，没有重复的key
	s = set([1,2,3]) 传入的参数是一个list

	
首先是纯的list不可以啊，你所说的list是set输入的标准格式，你不可以理解成是list。
举个栗子就是：
s1=set([1,2,3])
s2=set([1,2,(3,4)])
s3=set([1,2,[3,4]])
s4=set([1,2,(3,[4,5])])
这样看的话，s1和s2是对的，s3是不可以哈希化的，因为s3里面包含了一个list，换种说法就是里面有可变的key了。
s4不对的原因是，虽然第三个Key总体看是tuple，但是这个tuple里面是包含可变的list的，也就是说，这个set里面有个Key是可变的，那当然是不对了。







