一，进程
    1,os模块
    os.fork()调用一次，返回两次。子进程永远返回0,父进程返回子进程id
    
    2,multiprocessing 模块（由于windows没有fork调用，使用该模块跨平台）
    进程类Process
    进程池Pool
    
    3,subprocess模块  控制子进程的输入输出
    
    4,进程通信(Queue,Pipes)
    
二，线程
    1,thread,threading模块
    
    2,ThreadLocal
        ThreadLocal是一个全局变量，主要用于给每一个线程绑定特定的变量，每个线程都只能读写自己线程的独立副本，互不干扰。
        ThreadLocal最常用的地方就是为每个线程绑定一个数据库连接，HTTP请求，用户身份信息等，这样一个线程的所有调用到的处理函数都可以非常方便地访问这些资源
        

三，进程和线程的区别

   要实现多任务，通常使用的是Master,Worker模式，Master负责分配任务，Worker负责执行任务
   多进程稳定性高，一个子进程挂掉了不会影响其他进程。缺点是创建进程开销大
   多线程速度稍快，但是稳定性低，共享同一个进程内存。一个线程挂掉所有线程也会死掉。
   通常情况下优先多进程，因为Process更稳定
   
